#!/usr/local/bin/Rscript --no-save
THREADS <- 10
ITERATIONS <- 200
VAR_COUNT <- 15
library(doMC); registerDoMC(THREADS)
library(Rminfo)
library(sqldf)
options(stringsAsFactors=FALSE)

args <- commandArgs(trailingOnly=TRUE)

opts <- args[grep("^--",args)]
names(opts) <- sub("^--(\\w+)=?.*","\\1",opts)
opts[-grep("\\w=",opts)] <- 1
r <- grep("=",opts); opts[r] <- sub(".*=(.*)","\\1",opts[r])

opts["name"] <- if(is.na(opts["name"])) "" else opts["name"]

r <- grep("^--",args)
files <- if(length(r) > 0) args[-r] else args
if(length(files) == 0) {files <- "stdin"}

var_cols <- c(
  "hour_id",
#  "date",
#  "wday",
#  "tday",
  "campaign_name",
  "daily_budget",
  "company_name",
  "advertiser_name",
  "cost_type",
  "adx_category",
  "adx_product",
  "campaign_type",
  "ad_size",
  "ad_position",
  "ad_service_domain",
  "ad_file_type",
  "ad_content_type1",
  "ad_content_type2",
  "recency",
  "domain",
  "metro_name",
  "region_name",
  "country_name",
  "dma_code",
  "keywords",
  "context_l1",
  "context_l2",
  "exchange",
  "age",
  "gender")

for(f in files) {
  recs <- read.csv.sql(filter=sprintf("xzcat %s",f))
  recs$converts <- as.integer(recs$conversion_category > 0)
  gc()

  STATE <- if(length(grep('cpa',recs$goal,invert=TRUE,fixed=TRUE))>0) "clicks" else "converts"
#  STATE <- "clicks"
  SAMPLE_FACTOR <- 1e5/nrow(recs)
  SAMPLE_FACTOR <- if(SAMPLE_FACTOR > 0.80) 0.80 else SAMPLE_FACTOR
  SAMPLE_FACTOR <- if(SAMPLE_FACTOR < 0.20) 0.20 else SAMPLE_FACTOR

  print(sprintf("%s rows %d, SAMPLE_FACTOR %.3f%%, STATE %s",f,nrow(recs),100 * SAMPLE_FACTOR, STATE))

  pres <- foreach(i=1:ITERATIONS) %dopar% {
    r <- sample(1:nrow(recs), nrow(recs) * SAMPLE_FACTOR)
    t <- minfo(recs[r,STATE],recs[r,var_cols],count=15,progress=TRUE)
    gc()
    return(t)
  }

  t <- data.frame()

  for(i in 1:length(pres)) t <- rbind(t,pres[[i]])
  t <- t[t$pos > 0,]

  t2 <- aggregate(cbind(1,pos,minfo,cells) ~ factor + level, data=t, sum)
  t2$pos   <- t2$pos/t2$"1"
  t2$minfo <- t2$minfo/t2$"1"
  t2$cells <- t2$cells/t2$"1"

  t2$impressions <- 1
  t2$clicks <- 1
  t2$ctr <- 1

  for(i in 1:nrow(t2)) {
    r <- which(recs[,t2$factor[i]] == t2$level[i])
    t2$impressions[i] <-  sum(recs$impressions[r])
    t2$clicks[i]      <-  sum(recs$clicks[r])
    t2$ctr[i]         <- t2$clicks[i] / t2$impressions[i]
    t2$converts[i]     <-  sum(recs$converts[r])
    t2$atr[i]         <- t2$converts[i] / t2$impressions[i]
  }

  ave_ctr <- sum(recs$clicks)/sum(recs$impressions)
  ave_atr <- sum(recs$converts)/sum(recs$impressions)
  levels <- 0
  for(v in var_cols) levels <- levels + length(unique(recs[,v]))
  t2 <- rbind(t2,
    cbind(
      factor=sprintf("aa ALL: %d total factors",length(var_cols)),
      level=sprintf("aa ALL: %d total levels",levels),
      "1"=ITERATIONS,
      pos=0,
      minfo=1,
      cells=0,
      impressions=sum(recs$impressions),
      clicks=sum(recs$clicks),
      ctr=ave_ctr,
      converts=sum(recs$converts),
      atr=ave_atr
    ))

  t2$gb <- "Average"
  if(STATE == "clicks") {
    t2$gb[t2$ctr > ave_ctr] <- "Good"
    t2$gb[t2$ctr < ave_ctr] <- "Bad"
  } else {
    t2$gb[t2$atr > ave_atr] <- "Good"
    t2$gb[t2$atr < ave_atr] <- "Bad"
  }

  o <- if(STATE == "clicks") 
    order(t2$factor,t2$ctr,decreasing=TRUE) else 
    order(t2$factor,t2$atr,decreasing=TRUE)
  n <- c("gb","factor","level","impressions","clicks","ctr","converts","atr","1","pos","minfo","cells")

  fp <- unlist(strsplit(f,'.',fixed=TRUE))
  write.csv(t2[o,n],file=sprintf("%s%s_report.csv",fp[1],opts["name"]),row.names=FALSE)
}
